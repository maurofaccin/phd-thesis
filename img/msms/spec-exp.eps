%!PS-Adobe-2.0
%%Title: spec-exp.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Wed Jun  8 12:51:25 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (spec-exp.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (mauro)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jun  8 12:51:25 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
858 440 M
63 0 V
5882 0 R
-63 0 V
stroke
726 440 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
1.000 UL
LTb
858 874 M
63 0 V
5882 0 R
-63 0 V
stroke
726 874 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MRshow
1.000 UL
LTb
858 1307 M
63 0 V
5882 0 R
-63 0 V
stroke
726 1307 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.2)]
] -73.3 MRshow
1.000 UL
LTb
858 1741 M
63 0 V
5882 0 R
-63 0 V
stroke
726 1741 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.3)]
] -73.3 MRshow
1.000 UL
LTb
858 2174 M
63 0 V
5882 0 R
-63 0 V
stroke
726 2174 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.4)]
] -73.3 MRshow
1.000 UL
LTb
858 2608 M
63 0 V
5882 0 R
-63 0 V
stroke
726 2608 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.5)]
] -73.3 MRshow
1.000 UL
LTb
858 3041 M
63 0 V
5882 0 R
-63 0 V
stroke
726 3041 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.6)]
] -73.3 MRshow
1.000 UL
LTb
858 3475 M
63 0 V
5882 0 R
-63 0 V
stroke
726 3475 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.7)]
] -73.3 MRshow
1.000 UL
LTb
858 3908 M
63 0 V
5882 0 R
-63 0 V
stroke
726 3908 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.8)]
] -73.3 MRshow
1.000 UL
LTb
858 4342 M
63 0 V
5882 0 R
-63 0 V
stroke
726 4342 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.9)]
] -73.3 MRshow
1.000 UL
LTb
858 4775 M
63 0 V
5882 0 R
-63 0 V
stroke
726 4775 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MRshow
1.000 UL
LTb
858 440 M
0 63 V
0 4272 R
0 -63 V
stroke
858 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
1.000 UL
LTb
1849 440 M
0 63 V
0 4272 R
0 -63 V
stroke
1849 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 200)]
] -73.3 MCshow
1.000 UL
LTb
2840 440 M
0 63 V
0 4272 R
0 -63 V
stroke
2840 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 400)]
] -73.3 MCshow
1.000 UL
LTb
3831 440 M
0 63 V
0 4272 R
0 -63 V
stroke
3831 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 600)]
] -73.3 MCshow
1.000 UL
LTb
4821 440 M
0 63 V
0 4272 R
0 -63 V
stroke
4821 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 800)]
] -73.3 MCshow
1.000 UL
LTb
5812 440 M
0 63 V
0 4272 R
0 -63 V
stroke
5812 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1000)]
] -73.3 MCshow
1.000 UL
LTb
6803 440 M
0 63 V
0 4272 R
0 -63 V
stroke
6803 220 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1200)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
858 4775 N
858 440 L
5945 0 V
0 4335 V
-5945 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
2.000 UL
LT0
LCa setrgbcolor
1760 440 M
0 92 V
4 -92 R
0 19 V
37 -19 R
0 10 V
48 -10 R
0 71 V
5 -71 R
0 30 V
4 -30 R
0 6 V
55 -6 R
0 10 V
21 -10 R
0 15 V
4 -15 R
0 9 V
55 -9 R
0 35 V
79 -35 R
0 10 V
24 -10 R
0 43 V
16 -43 R
0 16 V
70 -16 R
0 18 V
5 -18 R
0 17 V
5 -17 R
0 13 V
5 -13 R
0 10 V
70 -10 R
0 12 V
53 -12 R
0 137 V
5 -137 R
0 84 V
4 -84 R
11 0 R
0 7 V
4 -7 R
0 17 V
5 -17 R
0 22 V
61 -22 R
0 322 V
5 -322 R
0 21 V
9 -21 R
0 16 V
5 -16 R
0 51 V
6 -51 R
0 22 V
5 -22 R
0 19 V
22 -19 R
0 17 V
19 -17 R
0 8 V
12 -8 R
0 17 V
50 -17 R
0 11 V
14 -11 R
0 13 V
17 -13 R
0 10 V
19 -10 R
0 13 V
14 -13 R
0 17 V
5 -17 R
7 0 R
0 28 V
4 -28 R
4 0 R
0 4 V
10 -4 R
0 32 V
6 -32 R
0 46 V
26 -46 R
0 9 V
8 -9 R
0 224 V
5 -224 R
0 27 V
10 -27 R
0 18 V
3 -18 R
8 0 R
0 5 V
18 -5 R
0 28 V
40 -28 R
0 29 V
16 -29 R
0 10 V
14 -10 R
0 20 V
21 -20 R
0 216 V
stroke 2812 656 M
4 -216 R
0 350 V
6 -350 R
0 96 V
4 -96 R
0 25 V
8 -25 R
0 13 V
10 -13 R
0 41 V
6 -41 R
0 6 V
15 -6 R
0 7 V
35 -7 R
0 110 V
5 -110 R
0 22 V
3 -22 R
20 0 R
0 5 V
15 -5 R
0 15 V
11 -15 R
0 11 V
14 -11 R
0 29 V
7 -29 R
0 6 V
12 -6 R
0 63 V
3 -63 R
30 0 R
0 13 V
9 -13 R
0 30 V
22 -30 R
0 25 V
13 -25 R
0 12 V
5 -12 R
0 149 V
4 -149 R
0 81 V
10 -81 R
0 14 V
31 -14 R
0 24 V
6 -24 R
0 9 V
6 -9 R
0 11 V
16 -11 R
0 28 V
21 -28 R
0 61 V
5 -61 R
0 486 V
4 -486 R
0 201 V
7 -201 R
0 37 V
30 -37 R
0 7 V
17 -7 R
0 9 V
9 -9 R
0 7 V
16 -7 R
0 44 V
5 -44 R
0 9 V
13 -9 R
0 18 V
10 -18 R
0 51 V
4 -51 R
0 11 V
9 -11 R
0 27 V
4 -27 R
4 0 R
0 13 V
9 -13 R
0 13 V
13 -13 R
0 22 V
5 -22 R
0 24 V
10 -24 R
0 12 V
9 -12 R
0 9 V
12 -9 R
0 16 V
32 -16 R
0 24 V
5 -24 R
0 7 V
9 -7 R
0 7 V
5 -7 R
0 42 V
39 -42 R
0 16 V
stroke 3448 456 M
4 -16 R
0 8 V
13 -8 R
0 14 V
21 -14 R
0 18 V
14 -18 R
0 476 V
5 -476 R
0 141 V
3 -141 R
28 0 R
0 32 V
4 -32 R
7 0 R
0 15 V
3 -15 R
0 17 V
10 -17 R
0 18 V
16 -18 R
0 14 V
3 -14 R
0 57 V
3 -57 R
0 8 V
25 -8 R
0 6 V
9 -6 R
0 40 V
8 -40 R
0 32 V
4 -32 R
11 0 R
0 28 V
20 -28 R
0 13 V
10 -13 R
0 21 V
6 -21 R
0 6 V
7 -6 R
0 6 V
7 -6 R
0 16 V
16 -16 R
0 8 V
3 -8 R
0 7 V
10 -7 R
0 43 V
7 -43 R
0 7 V
4 -7 R
0 8 V
4 -8 R
0 18 V
10 -18 R
0 13 V
4 -13 R
0 14 V
4 -14 R
0 12 V
12 -12 R
0 18 V
4 -18 R
0 15 V
10 -15 R
0 13 V
9 -13 R
0 11 V
7 -11 R
0 51 V
9 -51 R
0 106 V
5 -106 R
0 262 V
5 -262 R
0 122 V
5 -122 R
0 15 V
4 -15 R
0 11 V
7 -11 R
0 26 V
7 -26 R
0 47 V
13 -47 R
0 65 V
6 -65 R
0 55 V
4 -55 R
0 58 V
6 -58 R
0 20 V
4 -20 R
13 0 R
0 23 V
12 -23 R
0 68 V
6 -68 R
0 4335 V
5 -4335 R
0 376 V
stroke 3904 816 M
4 -376 R
0 42 V
4 -42 R
0 8 V
19 -8 R
0 21 V
60 -21 R
0 522 V
5 -522 R
0 153 V
5 -153 R
0 40 V
25 -40 R
0 12 V
9 -12 R
0 27 V
25 -27 R
0 53 V
34 -53 R
0 32 V
4 -32 R
0 11 V
49 -11 R
0 13 V
51 -13 R
0 14 V
48 -14 R
0 18 V
46 -18 R
0 43 V
6 -43 R
0 177 V
4 -177 R
0 89 V
4 -89 R
0 7 V
38 -7 R
0 11 V
37 -11 R
0 74 V
6 -74 R
0 14 V
5 -14 R
0 6 V
42 -6 R
0 16 V
28 -16 R
0 23 V
3 -23 R
0 7 V
17 -7 R
0 50 V
4 -50 R
0 45 V
30 -45 R
0 5 V
18 -5 R
0 36 V
4 -36 R
8 0 R
0 21 V
5 -21 R
0 12 V
75 -12 R
0 30 V
4 -30 R
0 988 V
5 -988 R
0 547 V
5 -547 R
0 100 V
3 -100 R
0 21 V
15 -21 R
0 12 V
21 -12 R
0 14 V
36 -14 R
0 13 V
10 -13 R
0 59 V
4 -59 R
0 69 V
4 -69 R
0 6 V
4 -6 R
0 21 V
12 -21 R
0 11 V
19 -11 R
0 12 V
11 -12 R
0 19 V
5 -19 R
0 11 V
24 -11 R
0 14 V
4 -14 R
0 81 V
3 -81 R
0 6 V
3 -6 R
0 29 V
5 -29 R
0 19 V
stroke 4823 459 M
9 -19 R
0 53 V
3 -53 R
13 0 R
0 25 V
48 -25 R
0 4 V
34 -4 R
0 9 V
21 -9 R
0 23 V
5 -23 R
0 13 V
16 -13 R
0 5 V
10 -5 R
0 1421 V
5 -1421 R
0 614 V
5 -614 R
0 199 V
3 -199 R
14 0 R
0 11 V
10 -11 R
0 8 V
9 -8 R
0 26 V
32 -26 R
0 19 V
15 -19 R
0 8 V
4 -8 R
0 6 V
58 -6 R
0 10 V
38 -10 R
0 14 V
5 -14 R
0 31 V
38 -31 R
0 13 V
6 -13 R
0 17 V
20 -17 R
0 9 V
21 -9 R
0 8 V
8 -8 R
0 36 V
4 -36 R
0 41 V
6 -41 R
0 44 V
4 -44 R
0 8 V
17 -8 R
0 16 V
4 -16 R
0 28 V
3 -28 R
53 0 R
0 31 V
4 -31 R
0 57 V
5 -57 R
0 4 V
11 -4 R
0 10 V
5 -10 R
0 7 V
64 -7 R
0 18 V
4 -18 R
0 21 V
5 -21 R
0 27 V
7 -27 R
0 18 V
3 -18 R
0 619 V
5 -619 R
0 456 V
8 -456 R
0 34 V
41 -34 R
0 14 V
26 -14 R
0 13 V
68 -13 R
0 35 V
3 -35 R
63 0 R
0 41 V
29 -41 R
0 62 V
5 -62 R
0 6 V
51 -6 R
0 6 V
9 -6 R
0 24 V
36 -24 R
0 14 V
stroke 5816 454 M
3 -14 R
0 4 V
4 -4 R
0 16 V
6 -16 R
0 23 V
26 -23 R
0 49 V
3 -49 R
0 67 V
7 -67 R
0 20 V
8 -20 R
0 9 V
19 -9 R
0 18 V
22 -18 R
0 12 V
27 -12 R
0 51 V
4 -51 R
9 0 R
0 16 V
59 -16 R
0 26 V
19 -26 R
0 512 V
5 -512 R
0 155 V
5 -155 R
0 22 V
6 -22 R
0 8 V
9 -8 R
0 11 V
98 -11 R
0 19 V
52 -19 R
0 32 V
6 -32 R
0 72 V
4 -72 R
4 0 R
0 12 V
10 -12 R
0 8 V
63 -8 R
0 55 V
6 -55 R
0 51 V
4 -51 R
0 12 V
85 -12 R
0 25 V
4 -25 R
0 10 V
245 -10 R
0 10 V
% End plot #1
stroke
1.000 UL
LTb
858 4775 N
858 440 L
5945 0 V
0 4335 V
-5945 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
