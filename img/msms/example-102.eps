%!PS-Adobe-2.0
%%Title: example-102.eps
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sun Jun 19 20:15:54 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (example-102.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (mauro)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Jun 19 20:15:54 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
858 704 M
63 0 V
stroke
726 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MRshow
1.000 UL
LTb
858 1518 M
63 0 V
stroke
726 1518 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.2)]
] -73.3 MRshow
1.000 UL
LTb
858 2332 M
63 0 V
stroke
726 2332 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.4)]
] -73.3 MRshow
1.000 UL
LTb
858 3147 M
63 0 V
stroke
726 3147 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.6)]
] -73.3 MRshow
1.000 UL
LTb
858 3961 M
63 0 V
stroke
726 3961 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.8)]
] -73.3 MRshow
1.000 UL
LTb
858 4775 M
63 0 V
stroke
726 4775 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MRshow
1.000 UL
LTb
858 704 M
0 63 V
0 4008 R
0 -63 V
stroke
858 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
1.000 UL
LTb
1889 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1889 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 2)]
] -73.3 MCshow
1.000 UL
LTb
2919 704 M
0 63 V
0 4008 R
0 -63 V
stroke
2919 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 4)]
] -73.3 MCshow
1.000 UL
LTb
3950 704 M
0 63 V
0 4008 R
0 -63 V
stroke
3950 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 6)]
] -73.3 MCshow
1.000 UL
LTb
4980 704 M
0 63 V
0 4008 R
0 -63 V
stroke
4980 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 8)]
] -73.3 MCshow
1.000 UL
LTb
6011 704 M
0 63 V
0 4008 R
0 -63 V
stroke
6011 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10)]
] -73.3 MCshow
1.000 UL
LTb
6011 704 M
-63 0 V
stroke
6143 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MLshow
1.000 UL
LTb
6011 1383 M
-63 0 V
stroke
6143 1383 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 20)]
] -73.3 MLshow
1.000 UL
LTb
6011 2061 M
-63 0 V
stroke
6143 2061 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 40)]
] -73.3 MLshow
1.000 UL
LTb
6011 2740 M
-63 0 V
stroke
6143 2740 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 60)]
] -73.3 MLshow
1.000 UL
LTb
6011 3418 M
-63 0 V
stroke
6143 3418 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 80)]
] -73.3 MLshow
1.000 UL
LTb
6011 4097 M
-63 0 V
stroke
6143 4097 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 100)]
] -73.3 MLshow
1.000 UL
LTb
6011 4775 M
-63 0 V
stroke
6143 4775 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 120)]
] -73.3 MLshow
1.000 UL
LTb
1.000 UL
LTb
858 4775 N
858 704 L
5153 0 V
0 4071 V
-5153 0 V
Z stroke
LCb setrgbcolor
3434 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (Temperature)]
] -73.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
5024 3069 M
[ [(Helvetica) 220.0 0.0 true true 0 (F')]
] -73.3 MRshow
LT0
910 4775 BoxF
961 4775 BoxF
1013 4775 BoxF
1064 4775 BoxF
1116 4775 BoxF
1167 4775 BoxF
1219 4775 BoxF
1270 4775 BoxF
1322 4775 BoxF
1373 4775 BoxF
1425 4775 BoxF
1476 4775 BoxF
1528 4775 BoxF
1579 4775 BoxF
1631 4612 BoxF
1682 4612 BoxF
1734 4612 BoxF
1786 4612 BoxF
1837 4612 BoxF
1889 4612 BoxF
1940 4612 BoxF
1992 4612 BoxF
2043 4286 BoxF
2095 4286 BoxF
2146 4149 BoxF
2198 4149 BoxF
2249 4149 BoxF
2301 4149 BoxF
2352 4149 BoxF
2404 4149 BoxF
2455 3209 BoxF
2507 3209 BoxF
2558 3209 BoxF
2610 3209 BoxF
2662 3209 BoxF
2713 3209 BoxF
2765 3209 BoxF
2816 3209 BoxF
2868 3209 BoxF
2919 3209 BoxF
2971 3209 BoxF
3022 3209 BoxF
3074 2740 BoxF
3125 2740 BoxF
3177 2740 BoxF
3228 2740 BoxF
3280 2740 BoxF
3331 2740 BoxF
3383 2740 BoxF
3435 2740 BoxF
3486 2740 BoxF
3538 2740 BoxF
3589 2740 BoxF
3641 2740 BoxF
3692 2740 BoxF
3744 2740 BoxF
3795 995 BoxF
3847 995 BoxF
3898 995 BoxF
3950 995 BoxF
4001 995 BoxF
4053 995 BoxF
4104 995 BoxF
4156 995 BoxF
4207 995 BoxF
4259 995 BoxF
4311 995 BoxF
4362 995 BoxF
4414 995 BoxF
4465 995 BoxF
4517 995 BoxF
4568 995 BoxF
4620 975 BoxF
4671 975 BoxF
4723 975 BoxF
4774 975 BoxF
4826 975 BoxF
4877 975 BoxF
4929 975 BoxF
4980 975 BoxF
5032 975 BoxF
5083 975 BoxF
5135 975 BoxF
5187 975 BoxF
5238 975 BoxF
5290 975 BoxF
5341 975 BoxF
5393 975 BoxF
5444 975 BoxF
5496 975 BoxF
5547 975 BoxF
5599 975 BoxF
5650 975 BoxF
5702 975 BoxF
5753 975 BoxF
5805 975 BoxF
5856 975 BoxF
5908 975 BoxF
5959 975 BoxF
5451 3069 BoxF
% End plot #1
% Begin plot #2
3.000 UL
LT1
LCa setrgbcolor
LCb setrgbcolor
5024 2849 M
[ [(Helvetica) 220.0 0.0 true true 0 (F)]
] -73.3 MRshow
LT1
LCa setrgbcolor
5156 2849 M
591 0 V
910 4775 M
51 -2 V
52 -7 V
51 -15 V
52 -23 V
51 -32 V
52 -40 V
51 -46 V
52 -53 V
51 -59 V
52 -62 V
51 -66 V
52 -69 V
51 -70 V
52 -71 V
51 -71 V
52 -72 V
52 -72 V
51 -73 V
52 -74 V
51 -76 V
52 -77 V
51 -79 V
52 -81 V
51 -81 V
52 -81 V
51 -81 V
52 -78 V
51 -76 V
52 -73 V
51 -71 V
52 -68 V
51 -65 V
52 -63 V
52 -62 V
51 -60 V
52 -60 V
51 -60 V
52 -60 V
51 -60 V
52 -61 V
51 -60 V
52 -61 V
51 -61 V
52 -61 V
51 -60 V
52 -59 V
51 -58 V
52 -57 V
52 -54 V
51 -53 V
52 -50 V
51 -48 V
52 -45 V
51 -43 V
52 -40 V
51 -37 V
52 -35 V
51 -33 V
52 -30 V
51 -28 V
52 -25 V
51 -24 V
52 -21 V
51 -20 V
52 -18 V
52 -16 V
51 -15 V
52 -14 V
51 -12 V
52 -11 V
51 -10 V
52 -10 V
51 -8 V
52 -8 V
51 -7 V
52 -7 V
51 -6 V
52 -5 V
51 -5 V
52 -5 V
51 -4 V
52 -4 V
52 -3 V
51 -3 V
52 -3 V
51 -3 V
52 -3 V
51 -2 V
52 -3 V
51 -2 V
52 -2 V
51 -2 V
52 -1 V
51 -2 V
52 -1 V
51 -2 V
52 -1 V
51 -1 V
% End plot #2
% Begin plot #3
stroke
LTa
LCa setrgbcolor
LCb setrgbcolor
5024 2629 M
[ [(Helvetica) 220.0 0.0 true true 0 (S)]
] -73.3 MRshow
LTa
LCa setrgbcolor
5156 2629 M
591 0 V
910 704 M
51 3 V
52 19 V
51 47 V
52 71 V
51 85 V
52 91 V
51 91 V
52 89 V
51 87 V
52 84 V
51 81 V
52 78 V
51 76 V
52 75 V
51 73 V
52 72 V
52 71 V
51 72 V
52 71 V
51 71 V
52 70 V
51 70 V
52 70 V
51 67 V
52 65 V
51 63 V
52 60 V
51 56 V
52 54 V
51 51 V
52 48 V
51 45 V
52 44 V
52 42 V
51 40 V
52 39 V
51 38 V
52 37 V
51 36 V
52 36 V
51 34 V
52 34 V
51 34 V
52 32 V
51 32 V
52 30 V
51 30 V
52 29 V
52 28 V
51 28 V
52 26 V
51 26 V
52 24 V
51 24 V
52 23 V
51 22 V
52 21 V
51 20 V
52 19 V
51 18 V
52 17 V
51 17 V
52 16 V
51 14 V
52 14 V
52 13 V
51 13 V
52 12 V
51 11 V
52 10 V
51 10 V
52 9 V
51 9 V
52 8 V
51 8 V
52 7 V
51 7 V
52 7 V
51 6 V
52 5 V
51 6 V
52 5 V
52 5 V
51 5 V
52 4 V
51 5 V
52 4 V
51 3 V
52 4 V
51 4 V
52 3 V
51 3 V
52 3 V
51 3 V
52 3 V
51 3 V
52 2 V
51 3 V
% End plot #3
% Begin plot #4
stroke
LT3
LC1 setrgbcolor
LCb setrgbcolor
5024 2409 M
[ [(Helvetica) 220.0 0.0 true true 0 (C)]
[(Helvetica) 176.0 -66.0 true true 0 (V)]
] -51.3 MRshow
LT3
LC1 setrgbcolor
5156 2409 M
591 0 V
910 704 M
51 7 V
52 9 V
51 8 V
52 8 V
51 10 V
52 15 V
51 20 V
52 25 V
51 30 V
52 34 V
51 38 V
52 43 V
51 48 V
52 53 V
51 59 V
52 65 V
52 70 V
51 74 V
52 77 V
51 77 V
52 71 V
51 61 V
52 49 V
51 32 V
52 17 V
51 2 V
52 -8 V
51 -15 V
52 -18 V
51 -17 V
52 -13 V
51 -9 V
52 -3 V
52 3 V
51 9 V
52 14 V
51 17 V
52 19 V
51 21 V
52 20 V
51 19 V
52 17 V
51 13 V
52 11 V
51 7 V
52 4 V
51 0 V
52 -2 V
52 -4 V
51 -8 V
52 -10 V
51 -12 V
52 -15 V
51 -17 V
52 -20 V
51 -22 V
52 -24 V
51 -27 V
52 -28 V
51 -30 V
52 -31 V
51 -33 V
52 -33 V
51 -33 V
52 -33 V
52 -33 V
51 -32 V
52 -31 V
51 -31 V
52 -29 V
51 -28 V
52 -27 V
51 -26 V
52 -24 V
51 -24 V
52 -21 V
51 -21 V
52 -19 V
51 -18 V
52 -18 V
51 -16 V
52 -15 V
52 -14 V
51 -13 V
52 -13 V
51 -11 V
52 -11 V
51 -11 V
52 -9 V
51 -9 V
52 -9 V
51 -8 V
52 -7 V
51 -8 V
52 -6 V
51 -7 V
52 -6 V
51 -5 V
% End plot #4
stroke
1.000 UL
LTb
858 4775 N
858 704 L
5153 0 V
0 4071 V
-5153 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
