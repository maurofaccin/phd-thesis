%!PS-Adobe-2.0
%%Title: out-F-S-correlation.eps
%%Creator: gnuplot 4.2 patchlevel 5 
%%CreationDate: Tue May  3 16:14:10 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (out-F-S-correlation.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 5 )
  /Author (Mauro Faccin)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Tue May  3 16:14:10 2011)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (November 2007)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 220 scalefont setfont
1.000 UL
LTb
1210 704 M
63 0 V
5597 0 R
-63 0 V
stroke
1078 704 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 8)]
] -73.3 MRshow
1.000 UL
LTb
1210 1111 M
63 0 V
5597 0 R
-63 0 V
stroke
1078 1111 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 10)]
] -73.3 MRshow
1.000 UL
LTb
1210 1518 M
63 0 V
5597 0 R
-63 0 V
stroke
1078 1518 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 12)]
] -73.3 MRshow
1.000 UL
LTb
1210 1926 M
63 0 V
5597 0 R
-63 0 V
stroke
1078 1926 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 14)]
] -73.3 MRshow
1.000 UL
LTb
1210 2333 M
63 0 V
5597 0 R
-63 0 V
stroke
1078 2333 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 16)]
] -73.3 MRshow
1.000 UL
LTb
1210 2740 M
63 0 V
5597 0 R
-63 0 V
stroke
1078 2740 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 18)]
] -73.3 MRshow
1.000 UL
LTb
1210 3147 M
63 0 V
5597 0 R
-63 0 V
stroke
1078 3147 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 20)]
] -73.3 MRshow
1.000 UL
LTb
1210 3554 M
63 0 V
5597 0 R
-63 0 V
stroke
1078 3554 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 22)]
] -73.3 MRshow
1.000 UL
LTb
1210 3962 M
63 0 V
5597 0 R
-63 0 V
stroke
1078 3962 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 24)]
] -73.3 MRshow
1.000 UL
LTb
1210 4369 M
63 0 V
5597 0 R
-63 0 V
stroke
1078 4369 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 26)]
] -73.3 MRshow
1.000 UL
LTb
1210 4776 M
63 0 V
5597 0 R
-63 0 V
stroke
1078 4776 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 28)]
] -73.3 MRshow
1.000 UL
LTb
1210 704 M
0 63 V
0 4009 R
0 -63 V
stroke
1210 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0)]
] -73.3 MCshow
1.000 UL
LTb
1776 704 M
0 63 V
0 4009 R
0 -63 V
stroke
1776 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.1)]
] -73.3 MCshow
1.000 UL
LTb
2342 704 M
0 63 V
0 4009 R
0 -63 V
stroke
2342 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.2)]
] -73.3 MCshow
1.000 UL
LTb
2908 704 M
0 63 V
0 4009 R
0 -63 V
stroke
2908 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.3)]
] -73.3 MCshow
1.000 UL
LTb
3474 704 M
0 63 V
0 4009 R
0 -63 V
stroke
3474 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.4)]
] -73.3 MCshow
1.000 UL
LTb
4040 704 M
0 63 V
0 4009 R
0 -63 V
stroke
4040 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.5)]
] -73.3 MCshow
1.000 UL
LTb
4606 704 M
0 63 V
0 4009 R
0 -63 V
stroke
4606 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.6)]
] -73.3 MCshow
1.000 UL
LTb
5172 704 M
0 63 V
0 4009 R
0 -63 V
stroke
5172 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.7)]
] -73.3 MCshow
1.000 UL
LTb
5738 704 M
0 63 V
0 4009 R
0 -63 V
stroke
5738 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.8)]
] -73.3 MCshow
1.000 UL
LTb
6304 704 M
0 63 V
0 4009 R
0 -63 V
stroke
6304 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 0.9)]
] -73.3 MCshow
1.000 UL
LTb
6870 704 M
0 63 V
0 4009 R
0 -63 V
stroke
6870 484 M
[ [(Helvetica) 220.0 0.0 true true 0 ( 1)]
] -73.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
1210 4776 N
0 -4072 V
5660 0 V
0 4072 V
-5660 0 V
Z stroke
LCb setrgbcolor
440 2740 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 220.0 0.0 true true 0 (S)]
] -73.3 MCshow
grestore
LTb
LCb setrgbcolor
4040 154 M
[ [(Helvetica) 220.0 0.0 true true 0 (F-value)]
] -73.3 MCshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
5302 2762 Pls
6015 2943 Pls
6396 2595 Pls
4322 2485 Pls
5958 2603 Pls
3232 3363 Pls
3787 2202 Pls
4925 2510 Pls
4804 1986 Pls
5941 2682 Pls
4924 1341 Pls
4419 2482 Pls
3438 2861 Pls
4916 2118 Pls
4092 2753 Pls
4561 1890 Pls
6214 2058 Pls
4953 3791 Pls
3217 3464 Pls
4796 2959 Pls
5462 3715 Pls
2706 3145 Pls
5190 2055 Pls
4768 2149 Pls
5932 1782 Pls
3449 3302 Pls
6173 1248 Pls
5970 2982 Pls
5242 971 Pls
6165 2008 Pls
3064 2780 Pls
5262 2338 Pls
3506 3739 Pls
5340 2667 Pls
5089 3456 Pls
5314 1598 Pls
5649 2012 Pls
4918 1931 Pls
4502 2044 Pls
4550 1932 Pls
5980 2366 Pls
6030 2757 Pls
4835 2921 Pls
3307 3278 Pls
5178 1869 Pls
6870 1242 Pls
6138 2461 Pls
3959 3707 Pls
5046 2505 Pls
5431 2556 Pls
4319 2021 Pls
3686 2655 Pls
5657 3576 Pls
6821 1560 Pls
6275 2063 Pls
5659 2232 Pls
6131 1503 Pls
4100 3322 Pls
4111 2930 Pls
5893 1993 Pls
6156 2318 Pls
4618 2789 Pls
4809 2732 Pls
5166 1656 Pls
3688 3264 Pls
6705 2710 Pls
3301 4439 Pls
6302 1799 Pls
1751 2757 Pls
3569 3109 Pls
4435 2472 Pls
6062 1892 Pls
4573 2091 Pls
2493 3542 Pls
4061 3489 Pls
4228 2540 Pls
6651 2037 Pls
2016 3195 Pls
1875 3574 Pls
6364 2163 Pls
3585 2337 Pls
3290 2694 Pls
6004 1871 Pls
4988 2293 Pls
5064 2091 Pls
6519 1453 Pls
6192 1499 Pls
5941 2877 Pls
6719 1378 Pls
3162 1883 Pls
4999 3148 Pls
4057 2274 Pls
3685 2257 Pls
4864 2318 Pls
6682 2557 Pls
6435 2647 Pls
6146 1206 Pls
2233 2370 Pls
5893 2544 Pls
4518 1785 Pls
5706 1914 Pls
6869 2352 Pls
5518 3600 Pls
5460 2173 Pls
3138 1875 Pls
4025 2208 Pls
6721 1945 Pls
5492 2495 Pls
5645 2049 Pls
5677 3173 Pls
4862 2265 Pls
5516 1272 Pls
5916 2681 Pls
6267 2067 Pls
6103 3032 Pls
4377 1955 Pls
4416 2175 Pls
5590 1111 Pls
3960 2124 Pls
4009 1573 Pls
5655 1296 Pls
6015 3207 Pls
3439 2889 Pls
6451 2332 Pls
6235 1847 Pls
4818 3194 Pls
5234 2575 Pls
4598 3001 Pls
6124 1311 Pls
5937 1268 Pls
4753 1724 Pls
5391 1905 Pls
4770 1891 Pls
3591 1775 Pls
3389 3162 Pls
6055 2233 Pls
6570 1571 Pls
5647 1294 Pls
4827 2284 Pls
6544 1182 Pls
6811 2437 Pls
5598 1936 Pls
5978 1737 Pls
4873 1433 Pls
4341 3184 Pls
6006 2705 Pls
4727 1729 Pls
5645 1772 Pls
3940 2750 Pls
5541 1955 Pls
5567 1162 Pls
5680 1390 Pls
4319 2804 Pls
4136 3086 Pls
4073 1756 Pls
4264 3154 Pls
4843 2474 Pls
6183 3139 Pls
5754 2244 Pls
3429 3406 Pls
6672 1125 Pls
4385 3129 Pls
3972 3012 Pls
4819 3462 Pls
3855 3821 Pls
6505 2758 Pls
4122 2595 Pls
4152 2943 Pls
3236 3225 Pls
5359 2472 Pls
4105 2844 Pls
4621 3369 Pls
5754 2219 Pls
5040 1957 Pls
5133 3888 Pls
6762 1974 Pls
6187 2187 Pls
4696 2427 Pls
3294 3611 Pls
4899 2262 Pls
5383 3722 Pls
3580 2925 Pls
6152 2556 Pls
3397 4012 Pls
5349 2348 Pls
2493 2934 Pls
2769 2753 Pls
3413 2796 Pls
5616 3541 Pls
3133 2978 Pls
4529 1392 Pls
3372 2220 Pls
6387 2740 Pls
4537 2307 Pls
6042 2635 Pls
4735 2877 Pls
5231 2876 Pls
5641 3347 Pls
6748 2192 Pls
4127 3017 Pls
6753 1611 Pls
5308 2055 Pls
4912 3093 Pls
4436 2042 Pls
6789 1145 Pls
4630 2701 Pls
6869 1336 Pls
4297 2175 Pls
4818 1965 Pls
2605 3419 Pls
5072 2462 Pls
6072 2641 Pls
5793 2560 Pls
4876 2707 Pls
4189 1675 Pls
6601 1315 Pls
5697 1837 Pls
3951 2757 Pls
6760 2144 Pls
4360 3349 Pls
6130 2634 Pls
5608 1313 Pls
6813 1087 Pls
6358 2505 Pls
3644 3598 Pls
5760 1900 Pls
4813 2577 Pls
5661 1780 Pls
5857 2400 Pls
2850 3072 Pls
6602 1692 Pls
4308 1662 Pls
6090 1674 Pls
5839 1814 Pls
6272 2452 Pls
5020 1364 Pls
6756 1755 Pls
6664 1233 Pls
5298 2690 Pls
5374 1794 Pls
6474 1695 Pls
6445 1934 Pls
6270 1416 Pls
5023 2202 Pls
6557 1368 Pls
6153 1589 Pls
5846 2290 Pls
4407 3102 Pls
4326 2805 Pls
5275 2634 Pls
6368 2123 Pls
5762 2531 Pls
3804 3384 Pls
2594 3769 Pls
6355 2347 Pls
4171 3454 Pls
5437 3328 Pls
3741 2193 Pls
3008 2948 Pls
2923 3085 Pls
3844 2722 Pls
6511 2313 Pls
4579 2021 Pls
5788 1827 Pls
3703 2732 Pls
3651 1895 Pls
6450 2660 Pls
5778 2535 Pls
5949 3397 Pls
4317 2773 Pls
4022 3046 Pls
6676 2187 Pls
6037 2114 Pls
3664 1992 Pls
4488 3364 Pls
4060 3429 Pls
5642 2608 Pls
4609 2310 Pls
2820 2202 Pls
5245 2292 Pls
1.000 UL
LT1
1751 3339 M
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
51 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
52 -15 V
51 -14 V
52 -15 V
52 -14 V
stroke
LTb
1210 4776 N
0 -4072 V
5660 0 V
0 4072 V
-5660 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
