%!PS-Adobe-2.0
%%Title: den-fit.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Fri Sep 18 10:33:31 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid true def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
1.000 UL
LTb
984 480 M
63 0 V
5745 0 R
-63 0 V
stroke
840 480 M
[ [(Helvetica) 240.0 0.0 true true 0 (-0.2)]
] -80.0 MRshow
1.000 UL
LTb
984 1090 M
63 0 V
5745 0 R
-63 0 V
stroke
840 1090 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MRshow
1.000 UL
LTb
984 1701 M
63 0 V
5745 0 R
-63 0 V
stroke
840 1701 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.2)]
] -80.0 MRshow
1.000 UL
LTb
984 2311 M
63 0 V
5745 0 R
-63 0 V
stroke
840 2311 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.4)]
] -80.0 MRshow
1.000 UL
LTb
984 2921 M
63 0 V
5745 0 R
-63 0 V
stroke
840 2921 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.6)]
] -80.0 MRshow
1.000 UL
LTb
984 3531 M
63 0 V
5745 0 R
-63 0 V
stroke
840 3531 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0.8)]
] -80.0 MRshow
1.000 UL
LTb
984 4142 M
63 0 V
5745 0 R
-63 0 V
stroke
840 4142 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MRshow
1.000 UL
LTb
984 4752 M
63 0 V
5745 0 R
-63 0 V
stroke
840 4752 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1.2)]
] -80.0 MRshow
1.000 UL
LTb
984 480 M
0 63 V
0 4209 R
0 -63 V
stroke
984 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 0)]
] -80.0 MCshow
1.000 UL
LTb
1952 480 M
0 63 V
0 4209 R
0 -63 V
stroke
1952 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 1)]
] -80.0 MCshow
1.000 UL
LTb
2920 480 M
0 63 V
0 4209 R
0 -63 V
stroke
2920 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 2)]
] -80.0 MCshow
1.000 UL
LTb
3888 480 M
0 63 V
0 4209 R
0 -63 V
stroke
3888 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 3)]
] -80.0 MCshow
1.000 UL
LTb
4856 480 M
0 63 V
0 4209 R
0 -63 V
stroke
4856 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 4)]
] -80.0 MCshow
1.000 UL
LTb
5824 480 M
0 63 V
0 4209 R
0 -63 V
stroke
5824 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 5)]
] -80.0 MCshow
1.000 UL
LTb
6792 480 M
0 63 V
0 4209 R
0 -63 V
stroke
6792 240 M
[ [(Helvetica) 240.0 0.0 true true 0 ( 6)]
] -80.0 MCshow
1.000 UL
LTb
1.000 UL
LTb
984 480 M
5808 0 V
0 4272 V
-5808 0 V
984 480 L
1.000 UP
1.000 UP
1.000 UL
LT0
LTb
5721 4569 M
[ [(Helvetica) 240.0 0.0 true true 0 (exp)]
] -80.0 MRshow
LT0
1468 4095 Pls
1654 4198 Pls
1859 4199 Pls
2054 4089 Pls
2054 4215 Pls
2249 4066 Pls
2250 4176 Pls
2434 4106 Pls
2434 4153 Pls
2629 4075 Pls
2815 4107 Pls
2824 3973 Pls
3010 4092 Pls
3020 4045 Pls
3215 3943 Pls
3399 3809 Pls
3501 3613 Pls
3593 3510 Pls
3788 3369 Pls
3880 3172 Pls
3972 2912 Pls
3982 2975 Pls
4166 2495 Pls
4166 2550 Pls
4268 2322 Pls
4359 1999 Pls
4370 2149 Pls
4554 1858 Pls
4564 1724 Pls
4646 1629 Pls
4646 1763 Pls
4738 1464 Pls
4748 1661 Pls
4932 1236 Pls
4943 1339 Pls
5127 1181 Pls
5127 1245 Pls
5322 1182 Pls
5323 1245 Pls
5518 1175 Pls
5723 1183 Pls
5908 1184 Pls
6298 1075 Pls
6484 1194 Pls
6679 1131 Pls
6699 1068 Pls
6184 4569 Pls
1.000 UP
1.000 UL
LT1
LTb
5721 4329 M
[ [(Helvetica) 240.0 0.0 true true 0 (fit)]
] -80.0 MRshow
LT1
5865 4329 M
639 0 V
984 4139 M
97 1 V
97 2 V
96 1 V
97 0 V
97 1 V
97 0 V
97 -1 V
96 -1 V
97 -1 V
97 -3 V
97 -4 V
97 -4 V
96 -6 V
97 -8 V
97 -9 V
97 -11 V
97 -13 V
96 -16 V
97 -19 V
97 -21 V
97 -25 V
97 -28 V
96 -32 V
97 -36 V
97 -42 V
97 -51 V
97 -65 V
96 -87 V
97 -126 V
97 -186 V
97 -264 V
97 -347 V
96 -395 V
97 -378 V
97 -305 V
97 -214 V
97 -138 V
96 -83 V
97 -50 V
97 -29 V
97 -18 V
97 -12 V
96 -7 V
97 -5 V
97 -4 V
97 -2 V
97 -3 V
96 -1 V
97 -1 V
97 -2 V
97 0 V
97 -1 V
96 0 V
97 0 V
97 0 V
97 0 V
97 0 V
96 0 V
97 1 V
97 0 V
984 4139 Crs
1081 4140 Crs
1178 4142 Crs
1274 4143 Crs
1371 4143 Crs
1468 4144 Crs
1565 4144 Crs
1662 4143 Crs
1758 4142 Crs
1855 4141 Crs
1952 4138 Crs
2049 4134 Crs
2146 4130 Crs
2242 4124 Crs
2339 4116 Crs
2436 4107 Crs
2533 4096 Crs
2630 4083 Crs
2726 4067 Crs
2823 4048 Crs
2920 4027 Crs
3017 4002 Crs
3114 3974 Crs
3210 3942 Crs
3307 3906 Crs
3404 3864 Crs
3501 3813 Crs
3598 3748 Crs
3694 3661 Crs
3791 3535 Crs
3888 3349 Crs
3985 3085 Crs
4082 2738 Crs
4178 2343 Crs
4275 1965 Crs
4372 1660 Crs
4469 1446 Crs
4566 1308 Crs
4662 1225 Crs
4759 1175 Crs
4856 1146 Crs
4953 1128 Crs
5050 1116 Crs
5146 1109 Crs
5243 1104 Crs
5340 1100 Crs
5437 1098 Crs
5534 1095 Crs
5630 1094 Crs
5727 1093 Crs
5824 1091 Crs
5921 1091 Crs
6018 1090 Crs
6114 1090 Crs
6211 1090 Crs
6308 1090 Crs
6405 1090 Crs
6502 1090 Crs
6598 1090 Crs
6695 1091 Crs
6792 1091 Crs
6184 4329 Crs
1.000 UL
LTa
984 4142 M
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
1.000 UL
LTa
984 1090 M
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
59 0 V
58 0 V
59 0 V
1.000 UL
LTb
984 480 M
5808 0 V
0 4272 V
-5808 0 V
984 480 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
